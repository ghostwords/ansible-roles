---

- name: Import Package Cloud package signing key
  apt_key:
    url: https://packagecloud.io/gpg.key
    state: present

- name: Add Grafana package repository
  apt_repository:
    repo: 'deb https://packagecloud.io/grafana/stable/debian/ wheezy main'
    state: present

- name: Install Grafana
  apt: name=grafana state=present

- name: Copy Grafana config
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: grafana
    mode: 0640
  notify:
    - restart Grafana

- name: Install passlib Python library (for htpasswd Ansible module)
  apt: name=python-passlib state=present

- name: Generate password file for Nginx basic authentication
  htpasswd:
    path: "{{ grafana_auth_basic_user_file }}"
    name: "{{ grafana_auth_basic_user }}"
    password: "{{ grafana_auth_basic_password }}"
    owner: root
    group: www-data
    mode: 0640
  notify:
   - test and reload Nginx

- name: Create self-signed SSL certificate
  command: openssl req -new -newkey rsa:2048 -nodes -x509 -subj "/C=US/CN={{ grafana_server_domain }}" -days 365 -keyout {{ grafana_server_cert_key }} -out {{ grafana_server_cert_file }} -extensions v3_ca
    creates={{ grafana_server_cert_file }}
  notify: test and reload Nginx

- name: Copy Grafana Nginx config
  template:
    src: nginx.j2
    dest: /etc/nginx/sites-available/{{ grafana_server_domain }}
  notify:
   - test and reload Nginx

- name: Activate Grafana Nginx config
  file:
    state: link
    src: /etc/nginx/sites-available/{{ grafana_server_domain }}
    path: /etc/nginx/sites-enabled/{{ grafana_server_domain }}
  notify:
   - test and reload Nginx

- name: Configure Grafana to start at boot time
  service: name=grafana-server enabled=yes
